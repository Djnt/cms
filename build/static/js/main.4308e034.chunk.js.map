{"version":3,"sources":["Header.js","Lib.js","Login.js","Client.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","logOut","localStorage","removeItem","_this","props","history","push","user","getItem","react_default","a","createElement","className","window","location","href","includes","Link","to","onClick","this","Component","withRouter","API_URL","process","REACT_APP_API_URL","api","axios","create","baseURL","timeout","headers","Authorization","interceptors","request","use","cfg","err","alert","response","status","document","cookie","Promise","reject","Login","state","email","password","submit","_this$state","post","then","res","console","log","setItem","data","token","catch","toast","error","position","POSITION","TOP_RIGHT","autoClose","hideProgressBar","_this2","required","type","placeholder","value","onChange","e","setState","target","disabled","class","Client","client","date","action","actions","renderClient","name","project","department","rows","createAction","title","client_id","id","length","concat","Object","toConsumableArray","objectSpread","BOTTOM_CENTER","defineProperty","renderActions","map","key","split","style","textAlign","paddingLeft","get","match","params","gamma","Dashboard","clients","departments","newClientArgs","hasMore","page","palette","editing","getClients","renderClients","index","backgroundColor","note","react","updateClient","destroyItem","applyEditValue","dep","estimate","budget","start_date","fontWeight","val","find","c","args","department_id","keys","put","findIndex","delete","filter","i","createClient","_this$state$newClient","applyClientValue","field","addNewUserForm","_this$state$newClient2","width","updateColor","renderPalette","__err","border","App","BrowserRouter","src_Header","triggerUpdate","Route","exact","path","component","lib","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4308e034.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\r\n  logOut = () => {\r\n    localStorage.removeItem('Token')\r\n    localStorage.removeItem('User')\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    const user = localStorage.getItem('User')\r\n    return (\r\n      <div className='header'>\r\n        <div className='left-block'>\r\n          {window.location.href.includes('client/') && \r\n            <Link to={`/clients`} className='invites-link'>Clients</Link>\r\n          }\r\n        </div>\r\n        {user && \r\n          <div className='right-block'>\r\n            <button onClick={this.logOut}>Log Out</button>\r\n            <div className='username'>{user}</div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import axios from 'axios';\r\n\r\nconst API_URL= process.env.REACT_APP_API_URL || 'https://testtesttza.herokuapp.com/'\r\nexport const api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000,\r\n  headers: {'Authorization': localStorage.getItem('Token')},\r\n});\r\n\r\napi.interceptors.request.use(cfg => {return cfg}, err => {\r\n  alert('sss')\r\n  if(err.response && err.response.status === 401) {\r\n    // alert('sss')\r\n    localStorage.removeItem('Token')\r\n    localStorage.removeItem('User')\r\n    document.cookie = `token=; path=/;`\r\n    window.location.push(\"/login\");\r\n  }\r\n  return Promise.reject(err);\r\n})\r\n","import React, { Component } from \"react\";\nimport {api} from './Lib';\nimport {toast} from 'react-toastify';\nimport { withRouter } from \"react-router\";\n\nclass Login extends Component {\n  state={\n    email: '',\n    password: ''\n  }\n  \n  submit = () => {\n    const { email, password } = this.state\n    api.post('/logins', { email, password })\n    .then(res => {\n      console.log(res)\n      localStorage.setItem('Token', res.data.token)\n      localStorage.setItem('User', res.data.data.email)\n      window.location.href = '/clients'\n    })\n    .catch(err => {\n      toast.error('Invalid email or password', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: true,\n        hideProgressBar: false\n      })\n    })\n  }\n  \n  render() {\n    return (\n      <div className='login col-12 col-md-2 offset-md-5'>\n        <h2>Login</h2>\n        <input required type='text' placeholder='Email Address' value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\n        <input required type='password' placeholder='Password' value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n        <button type=\"button\" disabled={!this.state.email || !this.state.password} class=\"btn btn-primary\" onClick={this.submit}>Sign In</button>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import React, { Component, Fragment } from \"react\";\nimport {api} from './Lib.js';\nimport {toast} from 'react-toastify';\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\n\nclass Client extends Component {\n  state= {\n    client: null,\n    date: '',\n    action: '',\n    actions: []\n  }\n\n  componentDidMount() {\n    console.log(this.props)\n    api.get('/clients/' + this.props.match.params.id)\n    .then(res => {\n      this.setState({ client: res.data })\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n      if(err.response.status === 401)\n        this.props.history.push(\"/login\")\n      else {\n        toast.error('Unable to load client!', {\n          position: toast.POSITION.BOTTOM_CENTER,\n          autoClose: false,\n          hideProgressBar: true\n        })\n      }\n    })\n  }\n\n  renderClient = () => {\n    const { client } = this.state\n    return client && (\n      <div className='history'>\n        <div className='header-title'>\n          <h4>Client: </h4>\n          <h2>{client.name}</h2>\n          <h4>Project:</h4>\n          <h2>{client.project}</h2>\n          <h4>Department: </h4>\n          <h2>{client.department && client.department.name}</h2>\n        </div>\n\n        <div className='new-action-form form-row align-items-center'>\n          <input className=\"form-control\" type='date' placeholder='Date' value={this.state.date} onChange={e => this.setState({date: e.target.value})}></input>\n          <textarea className=\"form-control\" rows='1' placeholder='Action'value={this.state.action} onChange={e => this.setState({action: e.target.value})}></textarea>\n          <button disabled={!this.state.date || !this.state.action} type=\"button\" class=\"btn btn-primary\" onClick={this.createAction}>Add</button>\n        </div>\n      </div>\n      \n    )\n  }\n\n  createAction = () => {\n    if(!this.state.date || !this.state.action) {\n      toast.error('Fields are missing!', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: true,\n        hideProgressBar: true,\n        autoClose: 2000\n      })\n    } else \n    api.post('/actions', { date: this.state.date, title: this.state.action, client_id: this.state.client.id })\n    .then(res => {\n      let { actions } = this.state.client\n      if(!actions || !actions.length)\n        actions = [res.data]\n      else actions = [res.data, ...actions]\n      this.setState({ client: {...this.state.client, actions} })\n    })\n    .catch(err => {\n      toast.error('Unable to create action!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: false,\n        hideProgressBar: true\n      })\n    })\n  }\n\n  renderActions = () => {\n    if(!this.state.client || !this.state.client.actions  || this.state.client.actions.length === 0)\n      return null;\n    \n    return this.state.client.actions.map(a => {\n      return <tr key={a.title}>\n        <td>{a.date.split('T')[0]}</td>\n        <td>{a.title.split(':')[0]}</td>\n        <td style={{ textAlign: 'left', paddingLeft: '20px' }}>{a.title.split(':')[1]}</td>\n      </tr>\n    })\n  }\n\n  render() {\n    return (\n      <div className='actions col-12 col-md-8 offset-md-2'>\n        {this.renderClient()}\n        <table class=\"table table-hover table-bordered thead-dark\">\n          <thead>\n            <tr>\n              <td className='short'>Date</td>\n              <td className='short'>Manager</td>\n              <td>Action</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderActions()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\nexport default withRouter(Client)","import React, { Component, Fragment } from \"react\";\r\nimport {api} from './Lib.js';\r\nimport {toast} from 'react-toastify';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst gamma = [\r\n  'white',\r\n  '#E5E5E5',\r\n  '#DEACC3',\r\n  '#F4AD9C',\r\n  '#ACC7ED',\r\n  '#E5FFF9',\r\n  '#FFFFC3',\r\n  '#CAF7AD'\r\n]\r\n\r\nclass Dashboard extends Component {\r\n  state= {\r\n    clients: [],\r\n    departments: [],\r\n    newClientArgs: {},\r\n    hasMore: false, \r\n    page: 0,\r\n    palette: false,\r\n    editing: {}\r\n  }\r\n\r\n  getClients = () => {\r\n    api.get(`/clients?page=${this.state.page}`)\r\n    .then(res => {\r\n      this.setState({ clients: (this.state.page === 0 ? res.data : this.state.clients.concat(res.data)), hasMore: res.data.length === 10, page: this.state.page + 1 })\r\n      console.log(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      if(err.response.status === 401)\r\n        this.props.history.push(\"/login\")\r\n      else {\r\n        toast.error('Unable to load clients!', {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: false,\r\n          hideProgressBar: true\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getClients()\r\n  \r\n    api.get('/departments')\r\n    .then(res => {\r\n      this.setState({ departments: res.data.departments })\r\n    })\r\n    .catch(__err => {\r\n    })\r\n  }\r\n\r\n  renderClients = () => {\r\n    const { clients } = this.state\r\n    return clients.map((client, index) => {\r\n      const title = client.action ? client.action.title.split(': ')[1] : 'nothing yet'\r\n      const editing = this.state.editing.id === client.id\r\n      const data = this.state.editing\r\n      return (\r\n          <tr key={client.name + index} style={{backgroundColor: gamma[client.note]}}>\r\n            <td>\r\n              <div className={`side-controls-block ${editing && 'act' }`}>\r\n                <i className=\"fa fa-paint-brush\" onClick={() => this.setState({ palette: (this.state.palette !== client.id ? client.id : false) })}></i>\r\n                {editing ? \r\n                  <Fragment>\r\n                    <i className=\"fa fa-close\" onClick={() => this.setState({ editing: {} })}></i>\r\n                    <i className=\"fa fa-check\" onClick={this.updateClient}></i>\r\n                  </Fragment>\r\n                  :\r\n                  <i className=\"fa fa-edit\" onClick={() => this.setState({ editing: client })}></i>\r\n                }\r\n                <i className=\"fa fa-trash\" onClick={() =>this.destroyItem(client.id)}></i>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input className=\"form-control\" type='text' value={data.name} onChange={e => this.applyEditValue(e.target.value, 'name')}></input>\r\n                :\r\n                client.name\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input className=\"form-control\" type='text' value={data.project} onChange={e => this.applyEditValue(e.target.value, 'project')}></input>\r\n                :\r\n                client.project\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <select className=\"form-control\" placeholder='Department' onChange={e => this.applyEditValue(e.target.value, 'department_id')}>\r\n                  <option value={-1}>None</option>\r\n                  {this.state.departments.map(dep => {\r\n                    return <option key={'dep' + dep.id} value={dep.id}>{dep.name}</option>\r\n                  })}\r\n                </select>\r\n                :\r\n                client.department && client.department.name\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input className=\"form-control\" type='text' value={data.estimate} onChange={e => this.applyEditValue(e.target.value, 'estimate')}></input>\r\n                :\r\n                client.estimate\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input className=\"form-control\" type='text' value={data.budget} onChange={e => this.applyEditValue(e.target.value, 'budget')}></input>\r\n                :\r\n                client.budget\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input className=\"form-control\" type='date' value={data.start_date} onChange={e => this.applyEditValue(e.target.value, 'start_date')}></input>\r\n                :\r\n                client.start_date\r\n              }\r\n            </td>\r\n            <td>{client.action && <span style={{ fontWeight: '600' }}>{client.action.title.split(': ')[0] + ': '}</span>}<Link to={`/client/${client.id}`} className='invites-link'>{title}</Link></td>\r\n          </tr>\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  applyEditValue = (val, key) => {\r\n    this.setState({editing: {...this.state.editing, [key]: val}})\r\n  }\r\n\r\n  updateClient = () => {\r\n    const { editing } = this.state\r\n    const client = this.state.clients.find(c => c.id === editing.id)\r\n    const args = {\r\n      ...(editing.name && editing.name !== client.name && {name: editing.name}),\r\n      ...(editing.project && editing.project !== client.project && {project: editing.project}),\r\n      ...(editing.estimate && editing.estimate !== client.estimate && {estimate: editing.estimate}),\r\n      ...(editing.budget && editing.budget !== client.budget && {budget: editing.budget}),\r\n      ...(editing.start_date && editing.start_date !== client.start_date && {start_date: editing.start_date}),\r\n      ...(editing.department_id && {department_id: editing.department_id}),\r\n    }\r\n    if(Object.keys(args).length === 0){\r\n      this.setState({ editing: {} })\r\n      return\r\n    }\r\n    api.put(`/clients/${editing.id}`, { client: args})\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      clients[clients.findIndex(c => c.id === res.data.id)] = res.data\r\n      this.setState({ clients, editing: {} })\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to update client!', {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  destroyItem = id => {\r\n    api.delete(`/clients/${id}`)\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      this.setState({ page: 0, clients: clients.filter(i => i.id !== id) })\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to delete client!', {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  createClient = () => {\r\n    const { name, project, department_id } = this.state.newClientArgs\r\n    if(!name || !project) {\r\n      toast.error('Fields are missing!', {\r\n        position: toast.POSITION.TOP_RIGHT\r\n      })\r\n    } else {\r\n      let data = this.state.newClientArgs\r\n      if(department_id)\r\n        data.department_id = department_id\r\n      if(department_id === -1)\r\n        data.department_id = null\r\n      \r\n      api.post('/clients', { client: data })\r\n      .then(res => {\r\n        this.setState({ page: 0, clients: [res.data, ...this.state.clients] })\r\n      })\r\n      .catch(err => {\r\n        toast.error('Unable to create client!', {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: false,\r\n          hideProgressBar: true\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  applyClientValue = (data, field) => {\r\n    this.setState({newClientArgs: {...this.state.newClientArgs, [field]: data}})\r\n  }\r\n\r\n  addNewUserForm = () => {\r\n    const { name, project, department_id, estimate, budget, start_date } = this.state.newClientArgs\r\n\r\n    return (\r\n      <div className='add-client-form form-row align-items-center'>\r\n        <input type='text' className=\"form-control\" placeholder='Name' value={name || ''} onChange={e => this.applyClientValue(e.target.value, 'name')} style={{ width: '15%' }}/>\r\n        <input type='text' className=\"form-control\" placeholder='Project' value={project || ''} onChange={e => this.applyClientValue(e.target.value, 'project')} style={{ width: '15%' }}/>\r\n        <select className=\"form-control\" placeholder='Department' onChange={e => this.applyClientValue(e.target.value, 'department_id')}>\r\n          <option value={-1}>None</option>\r\n          {this.state.departments.map(dep => {\r\n            return <option key={'dep' + dep.id} value={dep.id}>{dep.name}</option>\r\n          })}\r\n        </select>\r\n        <input className=\"form-control\" type='number' placeholder='Est' value={estimate || ''} onChange={e => this.applyClientValue(e.target.value, 'estimate')}/>\r\n        <input className=\"form-control\" type='number' placeholder='Bdjt' value={budget || ''} onChange={e => this.applyClientValue(e.target.value, 'budget')}/>\r\n        <input className=\"form-control\" type='date' placeholder='Start Date' value={start_date || ''} onChange={e => this.applyClientValue(e.target.value, 'start_date')} style={{ width: '15%' }}/>\r\n        <button disabled={!this.state.newClientArgs.name || !this.state.newClientArgs.project} type=\"button\" className=\"btn btn-primary\" onClick={this.createClient}>Create</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateColor = index => {\r\n    api.put(`/clients/${this.state.palette}`, { client: { note: index } })\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      clients[clients.findIndex(c => c.id === this.state.palette)].note = index\r\n      this.setState({clients, palette: false})\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to cupdate colour!', {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  renderPalette = () => {\r\n    return (\r\n      <div className='palette'>\r\n        {gamma.map((c, index) => {\r\n          return (\r\n            <div className='opt' style={{ backgroundColor: c }} onClick={() => this.updateColor(index)}/>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dashboard col-12 col-md-8 offset-md-2'>\r\n        {this.addNewUserForm()}\r\n        {this.state.palette !== false && this.renderPalette()}\r\n        <table border='1px' className='clients-table table table-hover table-bordered thead-dark'>\r\n          <thead>\r\n            <tr>\r\n              <td></td>\r\n              <td>Client</td>\r\n              <td>Project</td>\r\n              <td>Department</td>\r\n              <td>Estimate (h)</td>\r\n              <td>Budget ($)</td>\r\n              <td>Start Date</td>\r\n              <td>History</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderClients()}</tbody>\r\n        </table>\r\n        {/* {this.state.hasMore && <button className='load-more' onClick={this.getClients}></button>} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Dashboard)","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login\";\nimport Client from \"./Client\";\nimport Dashboard from \"./Dashboard.js\";\nimport { ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <div>\n            <Header triggerUpdate={this.triggerUpdate}/>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/clients\" component={Dashboard}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/client/:id\" component={Client}/>\n          </div> \n          <ToastContainer autoClose={3000}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap-scss'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}