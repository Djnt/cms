{"version":3,"sources":["Header.js","Lib.js","Login.js","Client.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","logOut","localStorage","removeItem","_this","props","history","push","user","getItem","react_default","a","createElement","className","onClick","this","Component","withRouter","API_URL","process","REACT_APP_API_URL","api","axios","create","baseURL","timeout","headers","Authorization","interceptors","request","use","cfg","err","alert","response","status","document","cookie","window","location","Promise","reject","Login","state","email","password","submit","_this$state","post","then","res","console","log","setItem","data","token","href","catch","toast","error","position","POSITION","BOTTOM_CENTER","autoClose","hideProgressBar","_this2","type","placeholder","value","onChange","e","setState","target","Client","client","date","action","actions","renderClient","name","project","department","createAction","title","client_id","id","length","Object","objectSpread","renderActions","map","key","split","get","match","params","border","gamma","Dashboard","clients","departments","newClientArgs","hasMore","page","palette","editing","getClients","concat","renderClients","index","style","backgroundColor","note","applyEditValue","react","updateClient","destroyItem","dep","estimate","budget","start_date","Link","to","val","defineProperty","find","c","args","department_id","keys","put","findIndex","delete","filter","i","createClient","_this$state$newClient","dep_id","toConsumableArray","applyClientValue","field","addNewUserForm","_this$state$newClient2","width","updateColor","renderPalette","__err","App","BrowserRouter","dismiss","src_Header","triggerUpdate","Route","exact","path","render","src_Dashboard","component","lib","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d82fadc9.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Header extends Component {\r\n\r\n  logOut = () => {\r\n    localStorage.removeItem('Token')\r\n    localStorage.removeItem('User')\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    const user = localStorage.getItem('User')\r\n    return (\r\n      <div className='header'>\r\n        {user && \r\n          <div className='right-block'>\r\n            <button onClick={this.logOut}>Log Out</button>\r\n            <div className='username'>{user}</div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import axios from 'axios';\r\n\r\nconst API_URL= process.env.REACT_APP_API_URL || 'https://testtesttza.herokuapp.com/'\r\nexport const api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 10000,\r\n  headers: {'Authorization': localStorage.getItem('Token')},\r\n});\r\n\r\napi.interceptors.request.use(cfg => {return cfg}, err => {\r\n  alert('sss')\r\n  if(err.response && err.response.status === 401) {\r\n    // alert('sss')\r\n    localStorage.removeItem('Token')\r\n    localStorage.removeItem('User')\r\n    document.cookie = `token=; path=/;`\r\n    window.location.push(\"/login\");\r\n  }\r\n  return Promise.reject(err);\r\n})\r\n","import React, { Component } from \"react\";\nimport {api} from './Lib';\nimport {toast} from 'react-toastify';\nimport { withRouter } from \"react-router\";\n\nclass Login extends Component {\n  state={\n    email: '',\n    password: ''\n  }\n  \n  submit = () => {\n    const { email, password } = this.state\n    api.post('/logins', { email, password })\n    .then(res => {\n      console.log(res)\n      localStorage.setItem('Token', res.data.token)\n      localStorage.setItem('User', res.data.data.email)\n      window.location.href = '/clients'\n    })\n    .catch(err => {\n      toast.error('Invalid email or password', {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: false,\n        hideProgressBar: true\n      })\n    })\n  }\n  \n  render() {\n    return (\n      <div className='login col-12 col-md-2 offset-md-5'>\n        <input type='text' placeholder='Email Address' value={this.state.email} onChange={e => this.setState({email: e.target.value})}/>\n        <input type='password' placeholder='Password' value={this.state.password} onChange={e => this.setState({password: e.target.value})}/>\n        <button onClick={this.submit}>Sign In</button>\n      </div>\n    );\n  }\n};\nexport default withRouter(Login);\n","import React, { Component, Fragment } from \"react\";\nimport {api} from './Lib.js';\nimport {toast} from 'react-toastify';\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\n\nclass Client extends Component {\n  state= {\n    client: null,\n    date: '',\n    action: '',\n    actions: []\n  }\n\n  componentDidMount() {\n    console.log(this.props)\n    api.get('/clients/' + this.props.match.params.id)\n    .then(res => {\n      this.setState({ client: res.data })\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n      if(err.response.status === 401)\n        this.props.history.push(\"/login\")\n      else {\n        toast.error('Unable to load client!', {\n          position: toast.POSITION.BOTTOM_CENTER,\n          autoClose: false,\n          hideProgressBar: true\n        })\n      }\n    })\n  }\n\n  renderClient = () => {\n    const { client } = this.state\n    return client && (\n      <div className='history'>\n        <div className='header-title'>\n          <h4>Client: </h4>\n          <h2>{client.name}</h2>\n          <h4>Project:</h4>\n          <h2>{client.project}</h2>\n          <h4>Department: </h4>\n          <h2>{client.department.name}</h2>\n        </div>\n\n        <div className='new-action-form'>\n          <input type='date' placeholder='Date' value={this.state.date} onChange={e => this.setState({date: e.target.value})}></input>\n          <input type='text' placeholder='Action'value={this.state.action} onChange={e => this.setState({action: e.target.value})}></input>\n          <button onClick={this.createAction}>Add</button>\n        </div>\n      </div>\n      \n    )\n  }\n\n  createAction = () => {\n    if(!this.state.date || !this.state.action) {\n      toast.error('Fields are missing!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: false,\n        hideProgressBar: true\n      })\n      return\n    }\n    api.post('/actions', { date: this.state.date, title: this.state.action, client_id: this.state.client.id })\n    .then(res => {\n      let { actions } = this.state.client\n      if(!actions || !actions.length)\n        actions = [res.data]\n      else actions.push(res.data)\n      this.setState({ client: {...this.state.client, actions} })\n    })\n    .catch(err => {\n      toast.error('Unable to create action!', {\n        position: toast.POSITION.BOTTOM_CENTER,\n        autoClose: false,\n        hideProgressBar: true\n      })\n    })\n  }\n\n  renderActions = () => {\n    if(!this.state.client || !this.state.client.actions  || this.state.client.actions.length === 0)\n      return null;\n    \n    return this.state.client.actions.map(a => {\n      return <tr key={a.title}>\n        <td>{a.date.split('T')[0]}</td>\n        <td>{a.title.split(':')[0]}</td>\n        <td>{a.title.split(':')[1]}</td>\n      </tr>\n    })\n  }\n\n  render() {\n    return (\n      <div className='actions col-12 col-md-8 offset-md-2'>\n        {this.renderClient()}\n        <table border='1px'>\n          <thead>\n            <tr>\n              <td className='short'>Date</td>\n              <td className='short'>Manager</td>\n              <td>Action</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderActions()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\nexport default withRouter(Client)","import React, { Component, Fragment } from \"react\";\r\nimport {api} from './Lib.js';\r\nimport {toast} from 'react-toastify';\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst gamma = [\r\n  'white',\r\n  '#E5E5E5',\r\n  '#DEACC3',\r\n  '#F4AD9C',\r\n  '#ACC7ED',\r\n  '#E5FFF9',\r\n  '#FFFFC3',\r\n  '#CAF7AD'\r\n]\r\n\r\nclass Dashboard extends Component {\r\n  state= {\r\n    clients: [],\r\n    departments: [],\r\n    newClientArgs: {},\r\n    hasMore: false, \r\n    page: 0,\r\n    palette: false,\r\n    editing: {}\r\n  }\r\n\r\n  getClients = () => {\r\n    api.get(`/clients?page=${this.state.page}`)\r\n    .then(res => {\r\n      this.setState({ clients: (this.state.page === 0 ? res.data : this.state.clients.concat(res.data)), hasMore: res.data.length === 10, page: this.state.page + 1 })\r\n      console.log(res)\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      if(err.response.status === 401)\r\n        this.props.history.push(\"/login\")\r\n      else {\r\n        toast.error('Unable to load clients!', {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n          autoClose: false,\r\n          hideProgressBar: true\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getClients()\r\n  \r\n    api.get('/departments')\r\n    .then(res => {\r\n      this.setState({ departments: res.data.departments })\r\n    })\r\n    .catch(__err => {\r\n    })\r\n  }\r\n\r\n  renderClients = () => {\r\n    const { clients } = this.state\r\n    return clients.map((client, index) => {\r\n      const title = client.action ? client.action.title : 'nothing yet'\r\n      const editing = this.state.editing.id === client.id\r\n      const data = this.state.editing\r\n      return (\r\n          <tr key={client.name + index} style={{backgroundColor: gamma[client.note]}}>\r\n            <td>\r\n              { editing ?\r\n                <input type='text' value={data.name} onChange={e => this.applyEditValue(e.target.value, 'name')}></input>\r\n                :\r\n                client.name\r\n              }\r\n              <div className='side-controls-block'>\r\n                <i className=\"fa fa-paint-brush\" onClick={() => this.setState({ palette: (this.state.palette !== client.id ? client.id : false) })}></i>\r\n                {editing ? \r\n                  <Fragment>\r\n                    <i className=\"fa fa-close\" onClick={() => this.setState({ editing: {} })}></i>\r\n                    <i className=\"fa fa-check\" onClick={this.updateClient}></i>\r\n                  </Fragment>\r\n                  :\r\n                  <i className=\"fa fa-edit\" onClick={() => this.setState({ editing: client })}></i>\r\n                }\r\n                <i className=\"fa fa-trash\" onClick={() =>this.destroyItem(client.id)}></i>\r\n              </div>\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input type='text' value={data.project} onChange={e => this.applyEditValue(e.target.value, 'project')}></input>\r\n                :\r\n                client.project\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <select placeholder='Department' onChange={e => this.applyEditValue(e.target.value, 'department_id')}>\r\n                  {this.state.departments.map(dep => {\r\n                    return <option key={'dep' + dep.id} value={dep.id}>{dep.name}</option>\r\n                  })}\r\n                </select>\r\n                :\r\n                client.department.name\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input type='text' value={data.estimate} onChange={e => this.applyEditValue(e.target.value, 'estimate')}></input>\r\n                :\r\n                client.estimate\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input type='text' value={data.budget} onChange={e => this.applyEditValue(e.target.value, 'budget')}></input>\r\n                :\r\n                client.budget\r\n              }\r\n            </td>\r\n            <td>\r\n              { editing ?\r\n                <input type='date' value={data.start_date} onChange={e => this.applyEditValue(e.target.value, 'start_date')}></input>\r\n                :\r\n                client.start_date\r\n              }\r\n            </td>\r\n            <td><Link to={`/client/${client.id}`} className='invites-link'>{title}</Link></td>\r\n          </tr>\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  applyEditValue = (val, key) => {\r\n    this.setState({editing: {...this.state.editing, [key]: val}})\r\n  }\r\n\r\n  updateClient = () => {\r\n    const { editing } = this.state\r\n    const client = this.state.clients.find(c => c.id === editing.id)\r\n    const args = {\r\n      ...(editing.name && editing.name !== client.name && {name: editing.name}),\r\n      ...(editing.project && editing.project !== client.project && {project: editing.project}),\r\n      ...(editing.estimate && editing.estimate !== client.estimate && {estimate: editing.estimate}),\r\n      ...(editing.budget && editing.budget !== client.budget && {budget: editing.budget}),\r\n      ...(editing.start_date && editing.start_date !== client.start_date && {start_date: editing.start_date}),\r\n      ...(editing.department_id && editing.department_id !== client.department.id && {department_id: editing.department_id}),\r\n    }\r\n    if(Object.keys(args).length === 0){\r\n      this.setState({ editing: {} })\r\n      return\r\n    }\r\n    api.put(`/clients/${editing.id}`, { client: args})\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      clients[clients.findIndex(c => c.id === res.data.id)] = res.data\r\n      this.setState({ clients, editing: {} })\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to update client!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  destroyItem = id => {\r\n    api.delete(`/clients/${id}`)\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      this.setState({ page: 0, clients: clients.filter(i => i.id !== id) })\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to delete client!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  createClient = () => {\r\n    const { name, project, department_id, estimate, budget, start_date } = this.state.newClientArgs\r\n    if(!name || !project || !estimate || !budget || !start_date)\r\n      return toast.error('Fields are missing!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    \r\n    let dep_id = department_id\r\n    if(!department_id || department_id !== 0) {\r\n      dep_id = (this.state.departments[0] || {}).id\r\n    } \r\n    \r\n    api.post('/clients', { client: {...this.state.newClientArgs, department_id: dep_id } })\r\n    .then(res => {\r\n      this.setState({ page: 0, clients: [...this.state.clients, res.data] })\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to create client!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  applyClientValue = (data, field) => {\r\n    this.setState({newClientArgs: {...this.state.newClientArgs, [field]: data}})\r\n  }\r\n\r\n  addNewUserForm = () => {\r\n    const { name, project, department_id, estimate, budget, start_date } = this.state.newClientArgs\r\n\r\n    return (\r\n      <div className='add-client-form'>\r\n        <input type='text' placeholder='Name' value={name || ''} onChange={e => this.applyClientValue(e.target.value, 'name')} style={{ width: '15%' }}/>\r\n        <input type='text' placeholder='Project' value={project || ''} onChange={e => this.applyClientValue(e.target.value, 'project')} style={{ width: '15%' }}/>\r\n        <select placeholder='Department' onChange={e => this.applyClientValue(e.target.value, 'department_id')}>\r\n          {this.state.departments.map(dep => {\r\n            return <option key={'dep' + dep.id} value={dep.id}>{dep.name}</option>\r\n          })}\r\n        </select>\r\n        <input type='number' placeholder='Est' value={estimate || ''} onChange={e => this.applyClientValue(e.target.value, 'estimate')}/>\r\n        <input type='number' placeholder='Bdjt' value={budget || ''} onChange={e => this.applyClientValue(e.target.value, 'budget')}/>\r\n        <input type='date' placeholder='Start Date' value={start_date || ''} onChange={e => this.applyClientValue(e.target.value, 'start_date')} style={{ width: '15%' }}/>\r\n        <button onClick={this.createClient}>Create</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  updateColor = index => {\r\n    api.put(`/clients/${this.state.palette}`, { client: { note: index } })\r\n    .then(res => {\r\n      let { clients } = this.state\r\n      clients[clients.findIndex(c => c.id === this.state.palette)].note = index\r\n      this.setState({clients, palette: false})\r\n    })\r\n    .catch(err => {\r\n      toast.error('Unable to cupdate colour!', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: false,\r\n        hideProgressBar: true\r\n      })\r\n    })\r\n  }\r\n\r\n  renderPalette = () => {\r\n    return (\r\n      <div className='palette'>\r\n        {gamma.map((c, index) => {\r\n          return (\r\n            <div className='opt' style={{ backgroundColor: c }} onClick={() => this.updateColor(index)}/>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='dashboard col-12 col-md-8 offset-md-2'>\r\n        {this.addNewUserForm()}\r\n        {this.state.palette !== false && this.renderPalette()}\r\n        <table border='1px' className='clients-table'>\r\n          <thead>\r\n            <tr>\r\n              <td>Client</td>\r\n              <td>Project</td>\r\n              <td>Department</td>\r\n              <td>Estimate (h)</td>\r\n              <td>Budget ($)</td>\r\n              <td>Start Date</td>\r\n              <td>History</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.renderClients()}</tbody>\r\n        </table>\r\n        {/* {this.state.hasMore && <button className='load-more' onClick={this.getClients}></button>} */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Dashboard)","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header.js\";\nimport Login from \"./Login\";\nimport Client from \"./Client\";\nimport Dashboard from \"./Dashboard.js\";\nimport { ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div onClick={(e)=>toast.dismiss()}>\n          <div>\n            <Header triggerUpdate={this.triggerUpdate}/>\n            <Route exact path=\"/\" render={(props) => <Dashboard {...props}/>} />\n            <Route path=\"/clients\" render={(props) => <Dashboard {...props}/>} />\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/client/:id\" component={Client}/>\n          </div> \n          <ToastContainer autoClose={3000}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap-scss'\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}